services:
  keycloak:
    image: quay.io/keycloak/keycloak:21.0.1
    container_name: keycloak
    ports:
      - 9000:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KC_DB=postgres
      - KC_DB_URL_HOST=postgres
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    depends_on:
      - postgres
    command: start-dev --import-realm
  postgres:
    image: postgres:14.7-alpine
    container_name: postgres
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloak
    volumes:
      - postgres:/var/lib/postgresql/data

  discoveryservice:
    image: hiroshinobuoka/discovery-service
    ports:
      - 8761:8761
    depends_on:
      - postgres
      - keycloak
  configservice:
    image: hiroshinobuoka/config-service
    depends_on:
      - discoveryservice
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    # overriding defaultZone from localhost -> Docker-managed host (i.e. "discoveryservice")
    environment:
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka/
  adminservice:
    image: hiroshinobuoka/admin-service
    ports:
      - 8085:8085
    depends_on:
      - discoveryservice
      - configservice
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

    # overriding oauth2 URI from localhost -> Docker-managed host (i.e. "keycloak")
    environment:
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka/
      - spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/movierecs-realm/protocol/openid-connect/certs
  usersservice:
    image: hiroshinobuoka/users-service
    ports:
      - 8085:8085
    depends_on:
      - discoveryservice
      - configservice
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    environment:
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka/
volumes:
  postgres:
